name: weather-now

services:
  app:
    build:
      context: ./dev/app
    image: weather-now-app:latest
    hostname: "app"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        com.weather-now.project: "Weather Now"
        com.weather-now.service: "app"
    depends_on:
      - postgresql
      - redis
    volumes:
      - ${PWD}/src/app:/usr/src/app
      - ${PWD}/src/logs:/usr/src/logs
    networks:
      - net-bridge
    ports:
      - "8009:8000"
    env_file:
      - ${PWD}/src/.env_dev

  celery_worker:
    build:
      context: ./dev/app
    command: celery -A weather_api worker -Q celery --loglevel=info
    image: weather-now-app:latest
    hostname: "celery_worker"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        com.weather-now.project: "Weather Now"
        com.weather-now.service: "celery worker"
    depends_on:
      - postgresql
      - redis
    volumes:
      - ${PWD}/src/app:/usr/src/app
      - ${PWD}/src/logs:/usr/src/logs
    networks:
      - net-bridge
    env_file:
      - ${PWD}/src/.env_dev

  postgresql:
    build:
      context: ./dev/postgresql
    image: weather-now-postgresql:latest
    hostname: "postgresql"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        com.weather-now.project: "Weather Now"
        com.weather-now.service: "postgresql"
    volumes:
      - postgresql_db:/var/lib/postgresql/data
    networks:
      - net-bridge
    ports:
      - "45432:5432"
    env_file:
      - ${PWD}/src/.env_dev

  redis:
    build:
      context: ./dev/redis
    image: weather-now-redis:latest
    hostname: "redis"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        com.weather-now.project: "Weather Now"
        com.weather-now.service: "redis"
    volumes:
      - redis_db:/data
    networks:
      - net-bridge


volumes:
  postgresql_db:
  redis_db:

networks:
  net-bridge:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.host_binding_ipv4: "127.0.0.1"
